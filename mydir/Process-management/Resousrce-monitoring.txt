Commands to monitor, manage and troubleshoot resources:


1. Top

2. free command to view RAM and Swap memory.

Below is the example for free command


[root@server ~]# free -h
                          total(total memory)       used(used memory)   free(free momory)   shared  buff/cache   available
Mem(RAM):                 1.8Gi                     1.1Gi                68Mi               13Mi       669Mi       574Mi
Swap(Swap memory):        3.1Gi                     133Mi                3.0Gi




DESCRIPTION
       free  displays  the total amount of free and used physical and swap memory in
       the system, as well as the buffers and caches used by the kernel. The  infor‐
       mation is gathered by parsing /proc/meminfo. The displayed columns are:

       total  Total installed memory (MemTotal and SwapTotal in /proc/meminfo)

       used   Used memory (calculated as total - free - buffers - cache)

       free   Unused memory (MemFree and SwapFree in /proc/meminfo)

       shared Memory used (mostly) by tmpfs (Shmem in /proc/meminfo)

       buffers
              Memory used by kernel buffers (Buffers in /proc/meminfo)

       cache  Memory  used  by  the page cache and slabs (Cached and SReclaimable in
              /proc/meminfo)

       buff/cache
              Sum of buffers and cache

       available
              Estimation of how much memory is available for starting  new  applica‐
              tions, without swapping. Unlike the data provided by the cache or free
              fields, this field takes into account page cache and also that not all
              reclaimable  memory  slabs will be reclaimed due to items being in use
              (MemAvailable in /proc/meminfo, available on kernels 3.14, emulated on
              kernels 2.6.27+, otherwise the same as free)


Option 


-b bytes

-k kibibytes

-g gibibytes

-h human readable



free -s seconds -c counts (to run free command in specific second and number of time).

free -th (to display total RAM + SWAP).


3. watch - execute a program periodically, showing output fullscreen

Below is the example for watch command:


watch -d -n 4 date (to see date five seconds).


4. iostat - Report Central Processing Unit (CPU) statistics and input/output statistics for devices and partitions.


EXAMPLES
       iostat
              Display a single history since boot report for all CPU and Devices.

       iostat -d 2
              Display a continuous device report at two second intervals.

       iostat -d 2 6
              Display six reports at two second intervals for all devices.

       iostat -x sda sdb 2 6
              Display six reports of extended statistics at two second intervals for devices sda and sdb.

       iostat -p sda 2 6
              Display six reports at two second intervals for device sda and all its partitions (sda1, etc.)

REPORTS
       The iostat command generates two types of reports, the CPU Utilization report and the Device Utilization report.

       CPU Utilization Report
              The  first  report generated by the iostat command is the CPU Utilization Report. For multiprocessor systems, the
              CPU values are global averages among all processors.  The report has the following format:

              %user
                     Show the percentage of CPU utilization that occurred while executing at the user level (application).

              %nice
                     Show the percentage of CPU utilization that occurred while executing at the user level with nice priority.

              %system
                     Show the percentage of CPU utilization that occurred while executing at the system level (kernel).

              %iowait
                     Show the percentage of time that the CPU or CPUs were idle during which the system had an outstanding disk
                     I/O request.

              %steal
                     Show  the percentage of time spent in involuntary wait by the virtual CPU or CPUs while the hypervisor was
                     servicing another virtual processor.

              %idle
                     Show the percentage of time that the CPU or CPUs were idle and the system did not have an outstanding disk
                     I/O request.



iostat -c     Display the CPU utilization report.

iostat -d     Display the device utilization report.

iostat -H     This  option  must  be used with option -g and indicates that only global statistics for the group are to be dis‐
              played, and not statistics for individual devices in the group.

iostat -h     Make the Device Utilization Report easier to read by a human.  --human is enabled implicitly with this option.


iostat -p [ { device [,...] | ALL } ]
              The  -p  option displays statistics for block devices and all their partitions that are used by the system.  If a
              device name is entered on the command line, then statistics for it and all its partitions  are  displayed.  Last,
              the  ALL  keyword indicates that statistics have to be displayed for all the block devices and partitions defined
              by the system, including those that have never been used. If option -j is defined  before  this  option,  devices
              entered on the command line can be specified with the chosen persistent name type.

iostat -s     Display a short (narrow) version of the report that should fit in 80 characters wide screens.

iostat -t     Print the time for each report displayed. The timestamp format may depend on the value of the S_TIME_FORMAT envi‐
              ronment variable (see below).

iostat -V     Print version number then exit.

iostat -x     Display extended statistics.

iostat -y     Omit first report with statistics since system boot, if displaying multiple records at given interval.

iostat -z     Tell iostat to omit output for any devices for which there was no activity during the sample period.


5. mpstat - Report processors related statistics.


EXAMPLES
       mpstat 2 5
              Display five reports of global statistics among all processors at two second intervals.

       mpstat -P ALL 2 5
              Display five reports of statistics for all processors at two second intervals.

[root@server ~]# mpstat
Linux 4.18.0-348.7.1.el8_5.x86_64 (server.centos9.local) 	02/18/2022 	_x86_64_	(1 CPU)

11:33:26 PM  CPU    %usr   %nice    %sys %iowait    %irq   %soft  %steal  %guest  %gnice   %idle
11:33:26 PM  all    3.27    0.05    0.87    2.07    0.59    0.14    0.00    0.00    0.00   93.01


-u     Report CPU utilization. The following values are displayed:

CPU - Processor number. The keyword all indicates that statistics are calculated as averages among all processors.

%usr - Show the percentage of CPU utilization that occurred while executing at the user level (application).

%nice - Show the percentage of CPU utilization that occurred while executing at the user level with nice priority.

%sys - Show the percentage of CPU utilization that occurred while executing at the system level (kernel). Note that this does  not  include
       time spent servicing hardware and software interrupts.

%iowait - Show the percentage of time that the CPU or CPUs were idle during which the system had an outstanding disk I/O request.

%irq - Show the percentage of time spent by the CPU or CPUs to service hardware interrupts.

%soft - Show the percentage of time spent by the CPU or CPUs to service software interrupts.

%steal - Show  the percentage of time spent in involuntary wait by the virtual CPU or CPUs while the hypervisor was servicing another virtual
         processor.

%guest - Show the percentage of time spent by the CPU or CPUs to run a virtual processor.

%gnice - Show the percentage of time spent by the CPU or CPUs to run a niced guest.

%%idle - Show the percentage of time that the CPU or CPUs were idle and the system did not have an outstanding disk I/O request.



6. lsof - list open files



EXAMPLES
       For a more extensive set of examples, documented more fully, see the 00QUICKSTART file of the lsof distribution.

       To list all open files, use:

              lsof

       To list all open Internet, x.25 (HP-UX), and UNIX domain files, use:

              lsof -i -U

       To list all open IPv4 network files in use by the process whose PID is 1234, use:

              lsof -i 4 -a -p 1234

       Presuming the UNIX dialect supports IPv6, to list only open IPv6 network files, use:

              lsof -i 6

       To list all files using any protocol on ports 513, 514, or 515 of host wonderland.cc.purdue.edu, use:

              lsof -i @wonderland.cc.purdue.edu:513-515

       To list all files using any protocol on any port of mace.cc.purdue.edu (cc.purdue.edu is the default domain), use:

              lsof -i @mace
       To list all open files for login name ``abe'', or user ID 1234, or process 456, or process 123, or process 789, use:

              lsof -p 456,123,789 -u 1234,abe

       To list all open files on device /dev/hd4, use:

              lsof /dev/hd4

       To find the process that has /u/abe/foo open, use:

              lsof /u/abe/foo

       To send a SIGHUP to the processes that have /u/abe/bar open, use:

              kill -HUP `lsof -t /u/abe/bar`

       To find any open file, including an open UNIX domain socket file, with the name /dev/log, use:

              lsof /dev/log

       To  find processes with open files on the NFS file system named /nfs/mount/point whose server is inaccessible, and presuming       your mount table supplies the device number for /nfs/mount/point, use:

              lsof -b /nfs/mount/point

       To do the preceding search with warning messages suppressed, use:

              lsof -bw /nfs/mount/point

       To ignore the device cache file, use:

              lsof -Di

       To obtain PID and command name field output for each process, file descriptor, file device number, and file inode number for       each  file  of  each process, use:

              lsof -FpcfDi

       To list the files at descriptors 1 and 3 of every process running the lsof command for login ID ``abe'' every 10 seconds, us       e:

              lsof -c lsof -a -d 1 -d 3 -u abe -r10

       To  list  the  current  working  directory  of processes running a command that is exactly four characters long and has an '       o' or 'O' in character three, use this regular expression form of the -c c option:

              lsof -c /^..o.$/i -a -d cwd

       To find an IP version 4 socket file by its associated numeric dot-form address, use:

              lsof -i@128.210.15.17

       To find an IP version 6 socket file (when the UNIX dialect supports IPv6) by its associated numeric colon-form address, use:

              lsof -i@[0:1:2:3:4:5:6:7]

       To find an IP version 6 socket file (when the UNIX dialect supports IPv6) by an associated numeric colon-form address that h       as a run of zeroes  in


       it - e.g., the loop-back address - use:

              lsof -i@[::1]

       To obtain a repeat mode marker line that contains the current time, use:

              lsof -rm====%T====

       To add spaces to the previous marker line, use:

              lsof -r "m==== %T ===="




lsof /dir to list the open file in the mentioned directory.

lsof -p pid to view open file via process id.

lsof -i :port-number ( to view which service is using the mentioned port). 

lsof -u username (to view open-file by the username).

lsof -u ^username (to view open-file by excluding the username).


7. fuser - identify processes using files or sockets

EXAMPLES:


fuser -m -u /dir  to see the user of the FS

fuser -kum /dir to kill all open file in FS

fuser -v /dir to see the all processes related to FS.

if fuser -s /dev/ttyS1; then :; else something; fi
              invokes something if no other process is using /dev/ttyS1.

fuser telnet/tcp - shows all processes at the (local) TELNET port.


vmstat : Report virtual memory statistics



FIELD DESCRIPTION FOR VM MODE
   Procs
       r: The number of runnable processes (running or waiting for run time).
       b: The number of processes blocked waiting for I/O to complete.

   Memory
       swpd: the amount of virtual memory used.
       free: the amount of idle memory.
       buff: the amount of memory used as buffers.
       cache: the amount of memory used as cache.
       inact: the amount of inactive memory.  (-a option)
       active: the amount of active memory.  (-a option)

   Swap
       si: Amount of memory swapped in from disk (/s).
       so: Amount of memory swapped to disk (/s).

   IO
       bi: Blocks received from a block device (blocks/s).
       bo: Blocks sent to a block device (blocks/s).

   System
       in: The number of interrupts per second, including the clock.
       cs: The number of context switches per second.

   CPU
       These are percentages of total CPU time.
       us: Time spent running non-kernel code.  (user time, including nice time)
       sy: Time spent running kernel code.  (system time)
       id: Time spent idle.  Prior to Linux 2.5.41, this includes IO-wait time.
       wa: Time spent waiting for IO.  Prior to Linux 2.5.41, included in idle.
       st: Time stolen from a virtual machine.  Prior to Linux 2.6.11, unknown.



